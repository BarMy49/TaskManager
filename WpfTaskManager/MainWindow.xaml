<Window x:Class="WpfTaskManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:WpfTaskManager.Converters"
        xmlns:localization="clr-namespace:TaskManager.Localization"
        Title="WPF Task Manager" Height="800" Width="1366"
        Background="{DynamicResource BackgroundBrush}"
        FontFamily="Colbert">
    <Window.Resources>
        <converters:BoolToStatusConverter x:Key="BoolToStatusConverter" />

        <Style TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource AccentBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Margin" Value="10,30,10,0" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Height" Value="30" />
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource HoverBrush}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="16" />
            <!-- <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" /> -->
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="RowBackground" Value="{DynamicResource BackgroundBrush}" />
            <Setter Property="AlternatingRowBackground" Value="{DynamicResource AlternateRowBrush}" />
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Padding" Value="10,5" />
                        <Setter Property="BorderThickness" Value="0.5" />
                        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{DynamicResource HeaderBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource HeaderTextBrush}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="10,5" />
        </Style>
        <!-- Style do elementów formularza -->
        <Style x:Key="DarkTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
            <Setter Property="CaretBrush" Value="{DynamicResource ForegroundBrush}" />
        </Style>
        <!-- Style do ComboBox -->
        <Style x:Key="DarkComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          Background="{TemplateBinding Background}"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border x:Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="1"
                                                CornerRadius="3">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="20" />
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter Grid.Column="0"
                                                                  Margin="5,0"
                                                                  HorizontalAlignment="Left"
                                                                  VerticalAlignment="Center"
                                                                  Content="{TemplateBinding Content}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                <Path Grid.Column="1"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Data="M 0 0 L 4 4 L 8 0 Z"
                                                      Fill="{DynamicResource ForegroundBrush}" />
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                                <ToggleButton.Content>
                                    <ContentPresenter Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" />
                                </ToggleButton.Content>
                            </ToggleButton>
                            <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="False"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Border x:Name="DropDown"
                                        Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="{DynamicResource ComboBoxBackgroundBrush}"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="3"
                                        Padding="2">
                                    <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                  VerticalScrollBarVisibility="Auto">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="False">
                                <Setter TargetName="DropDown" Property="MinHeight" Value="95" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border x:Name="Bd"
                                            Padding="5,3"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="0"
                                            SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="Left"
                                                          VerticalAlignment="Center"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Bd" Property="Background"
                                                    Value="{DynamicResource HoverBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Bd" Property="Background"
                                                    Value="{DynamicResource AccentBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundBrush}" />
                        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DarkDatePickerStyle" TargetType="DatePicker">
            <Setter Property="Background" Value="{DynamicResource DatePickerBackgroundBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource DatePickerBorderBrush}" />
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="55" />
            <RowDefinition Height="*" />
            <RowDefinition Height="80" />
        </Grid.RowDefinitions>

        <!-- Pasek wyszukiwania i wybór języka -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>

            <!-- Wyszukiwarka -->
            <Border CornerRadius="10" Margin="0,5,0,5"
                    Background="{DynamicResource MenuBackgroundBrush}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="1">
                <StackPanel Orientation="Horizontal" Margin="10,5" HorizontalAlignment="Center">
                    <TextBlock Text="{DynamicResource SearchText}"
                               Foreground="{DynamicResource ForegroundBrush}"
                               VerticalAlignment="Center"
                               FontWeight="Bold"
                               FontSize="16"
                               Margin="5,0,5,0" />
                    <TextBox Width="100" Height="30"
                             Style="{StaticResource DarkTextBoxStyle}"
                             Text="{Binding Input, UpdateSourceTrigger=PropertyChanged}"
                             PreviewKeyDown="SearchBox_PreviewKeyDown"
                             Margin="0,0,5,0" />
                </StackPanel>
            </Border>

            <!-- Wybór języka i motywu -->
            <Border Grid.Column="1" CornerRadius="10" Margin="0,5,10,5"
                    Background="{DynamicResource MenuBackgroundBrush}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="1">
                <StackPanel Orientation="Horizontal" Margin="10,5" HorizontalAlignment="Center">
                    <!-- Wybór języka -->
                    <TextBlock Text="{DynamicResource LanguageText}"
                               Foreground="{DynamicResource ForegroundBrush}"
                               VerticalAlignment="Center"
                               FontWeight="Bold"
                               FontSize="16"
                               Margin="5,0,5,0" />
                    <ComboBox Width="100" Height="30"
                              Style="{StaticResource DarkComboBoxStyle}"
                              Margin="0,0,15,0"
                              HorizontalContentAlignment="Center"
                              VerticalContentAlignment="Center"
                              ItemsSource="{Binding AvailableLanguages}"
                              SelectedItem="{Binding SelectedLanguage}" />

                    <!-- Wybór motywu -->
                    <TextBlock Text="{DynamicResource ThemeText}"
                               Foreground="{DynamicResource ForegroundBrush}"
                               VerticalAlignment="Center"
                               FontWeight="Bold"
                               FontSize="16"
                               Margin="0,0,5,0" />
                    <ComboBox Width="100" Height="30"
                              Style="{StaticResource DarkComboBoxStyle}"
                              Margin="0,0,5,0"
                              HorizontalContentAlignment="Center"
                              VerticalContentAlignment="Center"
                              ItemsSource="{Binding AvailableThemes}"
                              SelectedItem="{Binding SelectedTheme}" />
                </StackPanel>
            </Border>
        </Grid>

        <!-- Tabela z zadaniami - teraz na pełną wysokość -->
        <DataGrid Name="TasksGrid" ItemsSource="{Binding Records}"
                  Grid.Row="1"
                  AutoGenerateColumns="False" IsReadOnly="True" SelectionChanged="DataGrid_SelectionChanged">
            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox Tag="{Binding Id}"
                                      Checked="TaskCheckBox_Checked"
                                      Unchecked="TaskCheckBox_Unchecked"
                                      HorizontalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="50" />
                <DataGridTextColumn Header="{DynamicResource TitleText}" Binding="{Binding Title}" Width="*" />
                <DataGridTextColumn Header="{DynamicResource DescriptionText}" Binding="{Binding Description}"
                                    Width="200" />
                <DataGridTextColumn Header="{DynamicResource StatusText}"
                                    Binding="{Binding IsCompleted, Converter={StaticResource BoolToStatusConverter}}"
                                    Width="100" />
                <DataGridTextColumn Header="{DynamicResource CategoryText}" Binding="{Binding Category}" Width="100" />
                <DataGridTextColumn Header="{DynamicResource PriorityText}" Binding="{Binding Priority}" Width="100" />
                <DataGridTextColumn Header="{DynamicResource DueDateText}"
                                    Binding="{Binding DueDate, StringFormat=dd-MM-yyyy}" Width="100" />
            </DataGrid.Columns>
        </DataGrid>

        <!-- Prawa kolumna - przyciski akcji -->
        <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
            <StackPanel>
                <Button Content="{DynamicResource ExportPdfText}" Click="ExportPdf_Click" />
                <Button Content="{DynamicResource AddTaskText}" Click="AddTask_Click" />
                <Button Content="{DynamicResource FilterByText}" Click="FilterTasksBy_Click" />
                <Button Name="ListIncompleteButton" Content="{DynamicResource ListIncompleteText}"
                        Click="ListIncompleteTasks_Click" />
                <Button Name="ListCompleteButton" Content="{DynamicResource ListCompleteText}"
                        Click="ListCompleteTasks_Click" />
                <Button Name="AllTasksButton" Content="{DynamicResource AllTasksText}" Click="ListAllTasks_Click" />
                <Button Name="DeleteTaskButton" Content="{DynamicResource DeleteTaskText}" Click="DeleteTask_Click" />
                <Button Name="ToggleTaskButton" Content="{DynamicResource ToggleTaskText}"
                        Click="ToggleTaskCompletion_Click" />
                <Button Name="EditTaskButton" Content="{DynamicResource EditTaskText}" Click="EditTask_Click" />
            </StackPanel>
        </Grid>
        
        <!-- Dekoracyjny napis - teraz umieszczony na dole prawej kolumny -->
        <TextBlock Text="TaskManager"
                   Foreground="{DynamicResource TitleTextBrush}"
                   FontWeight="Bold"
                   FontFamily="Impact"
                   FontSize="70"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Bottom"
                   Margin="0,0,0,-25"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   Grid.Row="2"
                   Height="110"
                   Width="417" />
    </Grid>
</Window>